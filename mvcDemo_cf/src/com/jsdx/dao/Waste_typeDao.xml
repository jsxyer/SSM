<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsdx.dao.Waste_typeDao">

	<!-- 用于表的字段与实体对象的属性映射，type:表示映射成某种类型 用于字段名与实体类字段名不一致 实体类字段名与数据库表字段名一致时，使用resultType -->

	<resultMap id="waste_typeMap" type="Waste_type">
		<!-- id:表示这一列是表中的主键列 ;column:表示字段名;property:表示实体对象的属性名 -->
		<id column="id" property="id" />
		<!-- result:表示这一列是非主键和外键之外的普通列 -->
		<result column="name" property="wasteName" />
		<result column="code" property="wasteCode" />
	</resultMap>

	<!-- 指令，id值要与持久化类的方法名相同 , 取值在文件中要唯一。 resultType="Waste_type" 用的是别名，来自mybatis-config.xml 
		也是结果集封装后的类型 -->

	<!-- 因为字段名和数据库字段名匹配，所以使用resultType. 不匹配需设置resultMap并使用 -->
	<!-- 查找所有的记录 -->
	<select id="find" resultType="Waste_type">
		select * from waste_type
	</select>

	<!-- 通过id查找记录 #{id}是占位符，会自动把传入的参数填充进来，占位符的名称与参数名没有关联 -->
	<select id="findById" parameterType="int" resultType="Waste_type">
		select * 
		from waste_type where id = #{id}
	</select>

	<!-- 下面是增删改 parameterType="waste_type"别名，能自动获取数据库中受影响的行数 
		#{wasteName},#{wasteCode}占位符是从参数对象的属性中取数据
		useGeneratedKeys="true" keyProperty="id"这两个属性的作用是获取自动增长值，
		并保存到实体对象的ID属性中
	-->
	
	<!-- 插入数据 -->
	<insert id="add" parameterType="Waste_type" useGeneratedKeys="true" keyProperty="id">
		insert into waste_type values(null,#{name},#{code},#{create_date},#{update_date},#{del_flag},#{create_by})
	</insert>

	<!-- 更新数据 -->
	<update id="update" parameterType="Waste_type">
		update waste_type set name=#{name},code=#{code},create_date=#{create_date},update_date=#{update_date},del_flag=#{del_flag},create_by=#{create_by} where id=#{id}
	</update>
	
	<!-- 删除数据 -->
	<delete id="delete" parameterType="int">
		delete from waste_type where id=#{id}
	</delete>
</mapper>